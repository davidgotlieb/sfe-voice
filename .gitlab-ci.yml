stages:
  - production

production:
  type: deploy
  stage: production
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=food-recall-assistant --api-key=$HEROKU_API_KEY
  environment:
    name: production
    url: https://food-recall-assistant.herokuapp.com/
  only:
    - master


# stages:
#   - build
#   - test
#   - package
#   - deploy

# cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     untracked: true
#     paths:
#       - node_modules

# build_service:
#   image: node:8.11.2
#   stage: build
#   script:
#     - "npm install"
#     - "npm build"
#   artifacts:
#     expire_in: 1 week
#     paths:
#       - dist


# ng_test_service:
#   image: circleci/node:8.11.2-browsers
#   stage: test
#   script:
#     - "npm install"
#     - "npm run test"
#   cache:
#     policy: pull
#   artifacts:
#     expire_in: 1 week
#     paths:        
#       - /home/circleci/.npm/_logs/

# docker_package_service:  
#   stage: package
#   image: docker:stable
#   cache: {}
#   services:
#    - docker:dind
#   script:
#     - docker_build

# deploy_container:
#   stage: deploy
#   image: appropriate/curl
#   only:
#     - master
#   before_script:
#   cache: {}
#   dependencies:
#   environment:
#     name: production
#     url: http://service_URL_on_Azure
#   script:
#     - "echo Deploying $CLIENT_DEPLOY_USERNAME"
#     - "curl -X POST -H 'Content-Type: application/json' -d '{}' -f https://$CLIENT_DEPLOY_USERNAME:$CLIENT_DEPLOY_PASSWORD@hamburger-docker-client-can.scm.azurewebsites.net/docker/hook"

# .devops_scripts: &devops_scripts |
#   # Auto DevOps variables and functions
#   [[ "$TRACE" ]] && set -x  
#   export CI_APPLICATION_REPOSITORY=$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
#   export CI_APPLICATION_TAG=$CI_COMMIT_SHA

#   function docker_build() {

#     if [[ -n "$CI_REGISTRY_USER" ]]; then
#       echo "Logging to GitLab Container Registry with CI credentials..."
#       echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
#       echo ""
#     fi

#     if [[ -f Dockerfile ]]; then
#       echo "Building Dockerfile-based application..."
#       docker build -t "$CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:$CI_APPLICATION_TAG" -t "$CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:latest" .
#       echo "Created Tags $CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:$CI_APPLICATION_TAG and $CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:latest"
#     fi

#     echo "Pushing to GitLab Container Registry..."
#     docker push "$CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:$CI_APPLICATION_TAG"
#     docker push "$CI_APPLICATION_REPOSITORY/$DOCKER_SUB_APP:latest"
#     echo ""
#   }

# before_script:
#   - echo `pwd` # debug
#   - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
#   - *devops_scripts